if (FALSE) save_as_docx(tbl.dems, "output/tables/demographics.docx")
save_as_docx(tbl.dems, "output/tables/demographics.docx")
save_as_docx(tbl.dems, path = "output/tables/demographics.docx")
tbl.dems
#### Sample Characteristics ####
##### Demographics #####
tbl.dems <- dat.dems %>%
mutate(ma.ingest = if_else(ma.ingest, "MA User", "Non-Drug User"),
any.psychiatric.diagnosis = if_else(any.psychiatric.diagnosis, "Yes", "No")) %>%
select(ma.ingest, Age = age, Sex = sex, education,  ever.used.alcohol = alcohol.ever,
employment.status, license.status, psychiatric.diagnosis = any.psychiatric.diagnosis, residential.area = area.live,
audit.total) %>%
prep.names() %>%
flex.summary(summ.by = "Ma Ingest", include.p = !TRUE, dp = 2)
tbl.dems
#### Sample Characteristics ####
##### Demographics #####
tbl.dems <- dat.dems %>%
mutate(ma.ingest = if_else(ma.ingest, "MA User", "Non-Drug User"),
any.psychiatric.diagnosis = if_else(any.psychiatric.diagnosis, "Yes", "No")) %>%
select(ma.ingest, Age = age, Sex = sex, education,  ever.used.alcohol = alcohol.ever, audit.total,
employment.status, license.status, psychiatric.diagnosis = any.psychiatric.diagnosis, residential.area = area.live) %>%
prep.names() %>%
flex.summary(summ.by = "Ma Ingest", include.p = !TRUE, dp = 2)
tbl.dems
#### Sample Characteristics ####
##### Demographics #####
tbl.dems <- dat.dems %>%
mutate(ma.ingest = if_else(ma.ingest, "MA User", "Non-Drug User"),
any.psychiatric.diagnosis = if_else(any.psychiatric.diagnosis, "Yes", "No")) %>%
select(ma.ingest, Age = age, Sex = sex, education,  ever.used.alcohol = alcohol.ever, audit.total,
employment.status, license.status, psychiatric.diagnosis = any.psychiatric.diagnosis, residential.area = area.live) %>%
prep.names() %>%
flex.summary(summ.by = "Ma Ingest", include.p = !TRUE, dp = 2)
save_as_docx(tbl.dems, path = "output/tables/demographics.docx")
flex2xl(tbl.dems, "output/tables/demographics.xlsx")
flex2xl(tbl.dems, "output/tables/demographics.xlsx")
glimpse(dat.dems)
ma.df %>% glimpse()
#### Methamphetamine Use #####
ma.df %>%
filter(id %in% dat$id) %>%
select(ma.use.peak, ma.use.age, ma.use.ways, sds.total, ma.type) %>%
prep.names() %>%
flex.summary(dp = 2)
#### Methamphetamine Use #####
tbl.ma.use <- ma.df %>%
filter(id %in% dat$id) %>%
select(ma.use.peak, ma.use.age, ma.use.ways, sds.total, ma.type) %>%
prep.names() %>%
flex.summary(dp = 2)
save_as_docx(tbl.ma.use, path = "output/tables/ma-use.docx")
if (!"packages" %in% ls()) source("scripts/load-packages.R")
source("scripts/functions.R")
load("objects/all-objects.RData")
#### Sample Characteristics ####
##### Demographics #####
tbl.dems <- dat.dems %>%
mutate(ma.ingest = if_else(ma.ingest, "MA User", "Non-Drug User"),
any.psychiatric.diagnosis = if_else(any.psychiatric.diagnosis, "Yes", "No")) %>%
select(ma.ingest, Age = age, Sex = sex, education,  ever.used.alcohol = alcohol.ever, audit.total,
employment.status, license.status, psychiatric.diagnosis = any.psychiatric.diagnosis, residential.area = area.live) %>%
prep.names() %>%
flex.summary(summ.by = "Ma Ingest", include.p = !TRUE, dp = 2)
tbl.dems
8+20/53
(8+20)/53
(46+13)/72
(21+15)/53
(52+11)/72
glimpse(dat.dems)
audit.df
# AUDIT Scores
audit.df %>%
filter(id %in% dat$id)
# AUDIT Scores
audit.df %>%
filter(id %in% dat$id) %>%
group_by(ma.ingest) %>%
count(audit.risky) %>%
mutate(p = scales(n / sum(n), .1))
# AUDIT Scores
audit.df %>%
filter(id %in% dat$id) %>%
group_by(ma.ingest) %>%
count(audit.risky) %>%
mutate(p = scales::percent(n / sum(n), .1))
35+15
# AUDIT Scores
audit.df %>%
filter(id %in% dat$id) %>%
group_by(ma.ingest) %>%
count(audit.risky) %>%
mutate(p = scales::percent(n / sum(n), .2))
# AUDIT Scores
audit.df %>%
filter(id %in% dat$id) %>%
group_by(ma.ingest) %>%
count(audit.risky) %>%
mutate(p = scales::percent(n / sum(n), .01))
#### Methamphetamine Use #####
tbl.ma.use <- ma.df %>%
filter(id %in% dat$id) %>%
select(ma.use.peak, ma.use.age, ma.use.ways, sds.total, ma.type) %>%
prep.names() %>%
flex.summary(dp = 2)
tbl.ma.use
100-37.74
#### Free & Constrained Models ####
# Free Model
mgp.model <- "dd.total ~ duid.att.risk + duid.att.sanction + duid.att.peer"
mgp.free <- sem(mgp.model, data = dat, group = "ma.ingest")
summary(mgp.free)
summary(mgp.free)
# Constrained Model
mgp.constrained <- sem(mgp.model, dat, group = "ma.ingest", group.equal = c("intercepts", "regressions"))
summary(mgp.constrained)
# Comparing two models
anova(mgp.free, mgp.constrained) #%>% broom::tidy()
mgp.free
mgp.free %>% broom::tidy()
summary(mgp.free)
#### Comparing single constraints ####
# Risk
mgp.risk.model <- c("dd.total ~ c(b1, b1) * duid.att.risk + duid.att.sanction + duid.att.peer")
mgp.risk <- sem(mgp.risk.model, dat, group = "ma.ingest")
anova(mgp.free, mgp.risk)
# Sanction
mgp.sanction.model <-  c("dd.total ~ c(b1, b1) * duid.att.sanction + duid.att.risk + duid.att.peer")
mgp.sanction <- sem(mgp.sanction.model, dat, group = "ma.ingest")
anova(mgp.free, mgp.sanction)
# Peer
mgp.peer.model <- c("dd.total ~ c(b1, b1) * duid.att.peer + duid.att.risk + duid.att.sanction")
mgp.peer <- sem(mgp.peer.model, dat, group = "ma.ingest")
anova(mgp.free, mgp.peer)
#### Piecewise SEM  ####
# (basically does all the above stuff in one go lol)
model.psem <- piecewiseSEM::psem(lm(dd.total ~ duid.att.risk + duid.att.sanction + duid.att.peer, dat))
piecewiseSEM::multigroup(model.psem, group = "ma.ingest")
multigroup.model <- piecewiseSEM::multigroup(model.psem, group = "ma.ingest")
multigroup.model
summary(mgp.risk)
anova(mgp.free, mgp.risk)
anova(mgp.free, mgp.risk)
# Sanction
mgp.sanction.model <-  c("dd.total ~ c(b1, b1) * duid.att.sanction + duid.att.risk + duid.att.peer")
mgp.sanction <- sem(mgp.sanction.model, dat, group = "ma.ingest")
anova(mgp.free, mgp.sanction)
anova(mgp.free, mgp.risk)
# Sanction
mgp.sanction.model <-  c("dd.total ~ c(b1, b1) * duid.att.sanction + duid.att.risk + duid.att.peer")
mgp.sanction <- sem(mgp.sanction.model, dat, group = "ma.ingest")
anova(mgp.free, mgp.sanction)
# Peer
mgp.peer.model <- c("dd.total ~ c(b1, b1) * duid.att.peer + duid.att.risk + duid.att.sanction")
mgp.peer <- sem(mgp.peer.model, dat, group = "ma.ingest")
anova(mgp.free, mgp.peer)
anova(mgp.free, mgp.peer)
#### Piecewise SEM  ####
# (basically does all the above stuff in one go lol)
model.psem <- piecewiseSEM::psem(lm(dd.total ~ duid.att.risk + duid.att.sanction + duid.att.peer, dat))
piecewiseSEM::multigroup(model.psem, group = "ma.ingest")
multigroup.model <- piecewiseSEM::multigroup(model.psem, group = "ma.ingest")
multigroup.model
summary(mgp.free)
multigroup.model
devtools::install_github('https://github.com/ajmackay/AzTools')
if (!"packages" %in% ls()) source("scripts/load-packages.R")
source("scripts/functions.R")
load("objects/all-objects.RData")
#### Attitudes boxplot ####
dat.long <- dat %>%
pivot_longer(cols = c(duid.att.risk, duid.att.sanction, duid.att.peer), names_to = "att.subscale") %>%
mutate(
# att.subscale = factor(att.subscale, levels = c("duid.att.risk", "duid.att.sanction", "duid.att.peer")),
att.subscale = case_when(
att.subscale == "duid.att.risk" ~ "Favourable Attitude to Risks",
att.subscale == "duid.att.sanction" ~ "Unfavourable Attitude to \nSanctions",
att.subscale == "duid.att.peer" ~ "Favourable Peer Attitudes"
),
group = if_else(ma.ingest, "Methamphetamine Users", "Non-Drug Users")
)
stat.test <- dat.long %>%
group_by(att.subscale) %>%
t_test(value ~ group) %>%
adjust_pvalue() %>%
add_significance("p.adj") %>%
mutate(p.adj = scales::pvalue(p.adj))
plt.att.score <- ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
plt.att.score
camcorder::gg_record()
camcorder::gg_record(
dir = 'imgs'
width = 12,
camcorder::gg_record(
dir = "output/plots",
width = 12,
height = 12 * 9 / 16,
dpi = 300
dg = 'white'
camcorder::gg_record(
dir = "output/plots",
width = 12,
height = 12 * 9 / 16,
dpi = 300,
dg = 'white'
)
camcorder::gg_record(
dir = "output/plots",
width = 12,
height = 12 * 9 / 16,
dpi = 300,
bg = 'white'
)
plt.att.score <- ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
plt.att.score
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title = element_text(face = "bold"),
axis.text = element_text(size = 10))
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title = element_text(face = "bold"),
axis.text = element_text(size = 11))
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title = element_text(face = "bold"),
axis.text = element_text(size = 11),
legend.text = element_text(size = 11))
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = 'bold', vjust = 2)
axis.text = element_text(size = 11),
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = 'bold', vjust = 2),
axis.text = element_text(size = 11),
legend.text = element_text(size = 11))
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = 'bold', vjust = -2),
axis.text = element_text(size = 11),
legend.text = element_text(size = 11))
camcorder::gg_stop_recording()
ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = 'bold', vjust = -2),
axis.text = element_text(size = 11),
legend.text = element_text(size = 11))
plt.att.score <- ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = 'bold', vjust = -2),
axis.text = element_text(size = 11),
legend.text = element_text(size = 11))
?camcorder::gg_record
camcorder::gg_record(
dir = "output/plots",
width = 12,
height = 12 * 9 / 16,
dpi = 300,
bg = NULL
)
plt.att.score <- ggboxplot(dat.long, x = "att.subscale", y = "value", width = 0.5, fill = "group") +
stat_pvalue_manual(stat.test, x = "att.subscale", y.position = 7.5, label = "p.adj") +
labs(
fill = element_blank(),
x = "Attitude Factor",
y = "Score"
) +
scale_fill_brewer(palette = "OrRd") +
scale_y_continuous(breaks = seq(2, 7, 1)) +
theme(axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = 'bold', vjust = -2),
axis.text = element_text(size = 11),
legend.text = element_text(size = 11))
plt.att.score
camcorder::gg_stop_recording()
12*9
12*9/16
if (!"packages" %in% ls()) source("scripts/load-packages.R")
source("scripts/functions.R")
load("objects/all-objects.RData")
?piecewiseSEM::multigroup
if(!"packages" %in% ls()) source("scripts/load-packages.R")
source("scripts/functions.R")
load("objects/all-objects.RData")
if(!"packages" %in% ls()) source("scripts/load-packages.R")
source("scripts/functions.R")
load("objects/all-objects.RData")
dat
glimpse(Dat)
glimpse(dat)
# Attitudes ----
#### Mean Difference ####
dat %>%
group_by(ma.ingest) %>%
summarise(mean_cl_normal(duid.att.mean))
?rstatix::t_test
rstatix::t_test(dat, duid.att.mean ~ ma.ingest)
rstatix::t_test(dat, duid.att.mean ~ ma.ingest)
options(scipen = 999)
rstatix::t_test(dat, duid.att.mean ~ ma.ingest)
rstatix::t_test(dat, duid.att.mean ~ ma.ingest)
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>% add_significance()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>% add_significance()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>% add_p()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>% rstatix::add_significance(symbols = "ns")
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>% scales::pvalue(p)
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
mutate(p = scales::pvalue(p))
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
mutate(p = scales::pvalue(p))
format.p
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format.p()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format.p()
format.p
format_p <- function(dat, col = p) {
mutate(dat, p = scales::pvalue(col))
}
# Attitudes ----
#### Mean Difference ####
dat %>%
group_by(ma.ingest) %>%
summarise(mean_cl_normal(duid.att.mean)) %>%
format_p()
dat %>%
group_by(ma.ingest) %>%
summarise(mean_cl_normal(duid.att.mean))
rstatix::t_test(dat, duid.att.mean ~ ma.inest) %>%
format_p()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest)
rstatix::t_test(dat, duid.att.mean ~ ma.ingest)
format_p <- function(dat, col = 'p') {
mutate(dat, p = scales::pvalue(col))
}
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
format_p <- function(dat, col = p) {
mutate(dat, p = scales::pvalue({{col}}))
}
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
format_p <- function(dat, col = p) {
mutate(dat, p = scales::pvalue( {col} ) )
}
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
format_p <- function(dat, col = p) {
mutate(dat, p = scales::pvalue( {{col}} ))
}
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
# Attitudes ----
#### Mean Difference ####
dat %>%
group_by(ma.ingest) %>%
summarise(mean_cl_normal(duid.att.mean))
# Attitudes ----
#### Mean Difference ####
dat %>%
group_by(ma.ingest) %>%
summarise(mean_cl_normal(duid.att.mean),
sd = sd(duid.att.mean))
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
rstatix::t_test(dat, duid.att.mean ~ ma.ingest) %>%
format_p()
dat
glimpse(summ.df)
summ.df %>% count(ma.ingest)
survey.raw
survey.screened %>% count(ma.ingest)
summ.df %>% count(ma.ingest)
summ.df %>% count(ma.ingest) %>% adorn_total()
summ.df %>% count(ma.ingest) %>% adorn_totals()
t_test(dat, age ~ ma.ingest)
dat %>% glimpse()
dems.df %>% filter(id %in% dat)
dems.df %>% filter(id %in% dat$id)
dat.dems
t_test(dat.dems, age ~ ma.ingest)
t_test(dat, dd.att.mean ~ ma.ingest)
t_test(dat, duid.att.mean ~ ma.ingest)
dat %>% filter(!is.na(age))
dat.dems %>% filter(!is.na(age))
dat %>% filter(!is.na(duid.att.mnean))
dat %>% filter(!is.na(duid.att.mean))
dat.dems %>% count(ma.ingest)
t_test(dat.dems, age ~ ma.ingest)
t_test(dat, duid.att.mean ~ ma.ingest)
73+52
t_test(dat, duid.att.mean ~ ma.ingest, detailed = TRUE)
t_test(dat, duid.att.mean ~ ma.ingest, detailed = TRUE)
t_test(dat.dems, age ~ ma.ingest, detailed = TRUE)
t_test(dat.dems, age ~ ma.ingest, detailed = TRUE, paired = FALSE)
t_test(dat.dems, age ~ ma.ingest, detailed = TRUE, paired = TRUE)
?t.test
t.test(filter(dat, ma.ingest)$duid.att.mean, filter(dat, !ma.ingest)$duid.att.mean)
t.test(filter(dat.dems, ma.ingest)$age, filter(dat.dems, !ma.ingest)$age)
t_test(dat.dems, age ~ ma.ingest, detailed = TRUE, paired = TRUE)
t_test(dat.dems, age ~ ma.ingest, detailed = TRUE)
multigroup.model
multigroup.model <- piecewiseSEM::multigroup(model.psem, group = "ma.ingest")
summary(multigroup.model)
multigroup.model
#### Models ####
ma.lm <- lm(dd.total ~ duid.att.risk + duid.att.sanction + duid.att.peer, filter(dat, ma.ingest))
nma.lm <- lm(dd.total ~ duid.att.risk + duid.att.sanction + duid.att.peer, filter(dat, !ma.ingest))
summary(ma.lm)
ma.lm %>% psych::summary.psych()
ma.lm %>% tidy()
ma.lm %>% tidy(, conf.int = TRUE)
tidy(ma.lm, conf.int = TRUE)
tidy(ma.lm, conf.int = TRUE) %>% class()
tidy(ma.lm, conf.int = TRUE) %>%
prep.flex()
tidy(ma.lm, conf.int = TRUE) %>%
prep.flex(digits = 2)
tidy(ma.lm, conf.int = TRUE) %>%
format_p(p.value) %>% prep.flex(digits = 2)
format_p <- function(dat, col = p, keep = "unused") {
mutate(dat, p = scales::pvalue( {{col}} ), .keep = keep)
}
tidy(ma.lm, conf.int = TRUE) %>%
format_p(p.value) %>% prep.flex(digits = 2)
